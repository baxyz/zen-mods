name: Code Quality

on:
  pull_request:
    branches: [main, develop]

jobs:
  code-review:
    name: Automated Code Review
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint with annotations
        run: |
          npx eslint . --ext .js,.ts,.json --format @microsoft/eslint-formatter-sarif --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload ESLint results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

      - name: Comment PR with lint results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const { execSync } = require('child_process');
            try {
              execSync('npm run lint', { stdio: 'pipe' });
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '✅ **Code Quality Check Passed**\n\nAll linting rules are satisfied!'
              });
            } catch (error) {
              const output = error.stdout?.toString() || error.message;
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `❌ **Code Quality Issues Found**\n\n\`\`\`\n${output}\n\`\`\``
              });
            }
